"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5508],{79428:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var i=r(74848),t=r(28453);const s={},l="\u7b80\u4ecb",o={id:"FPGA-IC/VCS+Verdi\u4eff\u771f\u73af\u5883\u7684\u8bbe\u7f6e\u53caMakefile\u6587\u4ef6\u7f16\u5199",title:"\u7b80\u4ecb",description:"VCS\u548cVerdi\u5747\u4e3asynopsys\u9000\u51fa\u7684eda\u4eff\u771f\u8f6f\u4ef6\uff0c\u7528\u4e8eIC\u53caFPGA\u7b49RTL\u4ee3\u7801\u7684\u4eff\u771f\u53ca\u8c03\u8bd5",source:"@site/docs/FPGA-IC/VCS+Verdi\u4eff\u771f\u73af\u5883\u7684\u8bbe\u7f6e\u53caMakefile\u6587\u4ef6\u7f16\u5199.md",sourceDirName:"FPGA-IC",slug:"/FPGA-IC/VCS+Verdi\u4eff\u771f\u73af\u5883\u7684\u8bbe\u7f6e\u53caMakefile\u6587\u4ef6\u7f16\u5199",permalink:"/docs/FPGA-IC/VCS+Verdi\u4eff\u771f\u73af\u5883\u7684\u8bbe\u7f6e\u53caMakefile\u6587\u4ef6\u7f16\u5199",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/FPGA-IC/VCS+Verdi\u4eff\u771f\u73af\u5883\u7684\u8bbe\u7f6e\u53caMakefile\u6587\u4ef6\u7f16\u5199.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"VALID-READY-handshake",permalink:"/docs/FPGA-IC/VALID-READY-handshake"},next:{title:"VCS-\u4eff\u771f-VIVADO-IP",permalink:"/docs/FPGA-IC/VCS-\u4eff\u771f-VIVADO-IP"}},a={},d=[{value:"\u4e09\u4e2a\u53d8\u91cf\uff1a",id:"\u4e09\u4e2a\u53d8\u91cf",level:2},{value:"\u4e09\u4e2a\u547d\u4ee4",id:"\u4e09\u4e2a\u547d\u4ee4",level:2},{value:"VCS\u547d\u4ee4\u53ca\u53c2\u6570\u7684\u8bbe\u7f6e",id:"vcs\u547d\u4ee4\u53ca\u53c2\u6570\u7684\u8bbe\u7f6e",level:2},{value:"\u8bbe\u7f6e\u4eff\u771f\u73af\u5883",id:"\u8bbe\u7f6e\u4eff\u771f\u73af\u5883",level:3},{value:"\u4f7f\u7528vlogan\u6216\u8005vhdlan\u5bf9verilog\u3001vhdl\u3001System Verilog\u6216\u8005Openvera\u7b49\u6587\u4ef6\u8fdb\u884c\u8bed\u6cd5\u5206\u6790",id:"\u4f7f\u7528vlogan\u6216\u8005vhdlan\u5bf9verilogvhdlsystem-verilog\u6216\u8005openvera\u7b49\u6587\u4ef6\u8fdb\u884c\u8bed\u6cd5\u5206\u6790",level:3},{value:"Elaboration",id:"elaboration",level:3},{value:"Simulation\u5e76\u4f7f\u7528verdi\u67e5\u770b\u4eff\u771f\u7ed3\u679c",id:"simulation\u5e76\u4f7f\u7528verdi\u67e5\u770b\u4eff\u771f\u7ed3\u679c",level:3},{value:"1. post-processing mode",id:"1-post-processing-mode",level:4},{value:"2. UFE flow(\u63a8\u8350)",id:"2-ufe-flow\u63a8\u8350",level:4},{value:"Verdi\u7684\u4f7f\u7528",id:"verdi\u7684\u4f7f\u7528",level:2},{value:"\u53c2\u8003\u6587\u732e",id:"\u53c2\u8003\u6587\u732e",level:2},{value:"\u9644\u5f55",id:"\u9644\u5f55",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"\u7b80\u4ecb",children:"\u7b80\u4ecb"})}),"\n",(0,i.jsx)(n.p,{children:"VCS\u548cVerdi\u5747\u4e3asynopsys\u9000\u51fa\u7684eda\u4eff\u771f\u8f6f\u4ef6\uff0c\u7528\u4e8eIC\u53caFPGA\u7b49RTL\u4ee3\u7801\u7684\u4eff\u771f\u53ca\u8c03\u8bd5"}),"\n",(0,i.jsx)(n.h1,{id:"vcs\u548cverdi\u73af\u5883\u7684\u914d\u7f6e",children:"VCS\u548cVerdi\u73af\u5883\u7684\u914d\u7f6e"}),"\n",(0,i.jsx)(n.h2,{id:"\u4e09\u4e2a\u53d8\u91cf",children:"\u4e09\u4e2a\u53d8\u91cf\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"VERDI_HOME/NOVAS_HOME\uff1a\u4eff\u771f\u5668\u9ed8\u8ba4\uff0c\u4e14\u4e3a\u8bbe\u7f6ePATH\u505a\u51c6\u5907"}),"\n",(0,i.jsx)(n.li,{children:"PATH\uff1a\u8ba9\u7cfb\u7edf\uff08Linux\uff09\u627e\u5230Verdi"}),"\n",(0,i.jsx)(n.li,{children:"LD_LIBRARY_PATH\uff1a\u8ba9\u7cfb\u7edf\uff08Linux\uff09\u80fd\u591f\u4e2d\u627e\u5230Verdi\u9700\u8981\u7684\u5e93\u6587\u4ef6"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u4e09\u4e2a\u547d\u4ee4",children:"\u4e09\u4e2a\u547d\u4ee4"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["echo(\u53ef\u914d\u5408sed)\uff1a\u67e5\u8be2\u73af\u5883\u53d8\u91cf","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"echo $PATH | sed 's/:/\\n/g'"}),"\n",(0,i.jsx)(n.li,{children:"echo $LD_LIBRARY_PATH | sed 's/:/\\n/g'"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u9700\u8981\u4fdd\u8bc1VCS\u548cVerdi\u5747\u6210\u529f\u589e\u52a0\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u4f7f\u7528which\u547d\u4ee4\u67e5\u8be2\u8f6f\u4ef6\u8def\u5f84\u662f\u5426\u8bbe\u7f6e\u6210\u529f"}),"\n",(0,i.jsx)(n.h2,{id:"vcs\u547d\u4ee4\u53ca\u53c2\u6570\u7684\u8bbe\u7f6e",children:"VCS\u547d\u4ee4\u53ca\u53c2\u6570\u7684\u8bbe\u7f6e"}),"\n",(0,i.jsx)(n.h3,{id:"\u8bbe\u7f6e\u4eff\u771f\u73af\u5883",children:"\u8bbe\u7f6e\u4eff\u771f\u73af\u5883"}),"\n",(0,i.jsx)(n.p,{children:"\u5728\u8fdb\u884c\u4eff\u771f\u4e4b\u524d\u9700\u8981\u5148\u914d\u7f6esynopsys_sim.setup\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u7528\u4e8e\u6620\u5c04\u7279\u5b9a\u7684\u8bbe\u8ba1\u5e93\uff0c\u8bbe\u7f6e\u641c\u7d22\u8def\u5f84\uff0c\u5e76\u58f0\u660e\u4eff\u771f\u8fc7\u7a0b\u4e2d\u7684\u63a7\u5236\u53d8\u91cf\u3002synopsys_sim.setup\u6587\u4ef6\u5e94\u5b58\u653e\u5728VCS\u7684\u5b89\u88c5\u76ee\u5f55/bin\u76ee\u5f55\u4e0b\uff0c\u4e2a\u4ebahome\u76ee\u5f55\u4e0b\uff0c\u6216\u8005\u4eff\u771f\u7684\u8fd0\u884c\u8def\u5f84\u4e0b\u3002\u4e00\u822c\u800c\u8a00\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6307\u5b9a\u5e93\u540d\u79f0\u7528\u4e8e\u5b58\u653eanalyze\u8fc7\u7a0b\u4e2d\u751f\u6210\u7684\u4e2d\u95f4\u6587\u4ef6\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"WORK > worklib\r\nworklib : ./worklib\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u8bbe\u7f6eworklib\u4e3aWORK\u7684\u903b\u8f91\u5e93\uff0c\u5e76\u5c06\u5176\u6620\u5c04\u5230\u8ba1\u7b97\u673a\u5bf9\u5e94\u7684\u7269\u7406\u8def\u5f84worklib\u3002"}),"\n",(0,i.jsx)(n.p,{children:"VCS\u8fdb\u884c\u4eff\u771f\u53ef\u5206\u4e3a\u4e09\u6b65\uff0cAnalysis(vlogan/vhdlan) -> Elaboration(vcs) -> simulation -> verdi"}),"\n",(0,i.jsx)(n.h3,{id:"\u4f7f\u7528vlogan\u6216\u8005vhdlan\u5bf9verilogvhdlsystem-verilog\u6216\u8005openvera\u7b49\u6587\u4ef6\u8fdb\u884c\u8bed\u6cd5\u5206\u6790",children:"\u4f7f\u7528vlogan\u6216\u8005vhdlan\u5bf9verilog\u3001vhdl\u3001System Verilog\u6216\u8005Openvera\u7b49\u6587\u4ef6\u8fdb\u884c\u8bed\u6cd5\u5206\u6790"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# set the vhdlan options, the more options can be find in VCS MX/VCS MXi User Guide or vhdlan -help\r\nVCS_VHDL_OPTIONS  = -nc # Suppresses the Synopsys copyright message.\r\nVCS_VHDL_OPTIONS += -full64 # Analyze the design for 64-bit simulation.\r\nVCS_VHDL_OPTIONS +=\t-work worklib # Map a design library name to the logical library ame WORK\r\n                                  # which receives the output of vhdlan.\r\nVCS_VHDL_OPTIONS +=\t-l vhdlan_rtl.log # Specifies a log file.\r\nVCS_VHDL_OPTIONS +=\t-f ./filelist/vhdl.f # Specifies the VHDL source filelist to be analyzed.\r\nVCS_VHDL_OPTIONS +=\t-f ./filelist/tb.f # Specifies the TB source filelist to be analyzed.\r\nVCS_VHDL_OPTIONS += -kdb\r\n\r\n#--------------------------------------------------------------------------------\r\n# set the vlogan options, the more options can be find in VCS MX/VCS MXi User Guide or vlogan -help\r\nVCS_VLOG_OPTIONS = -nc # Suppresses the Synopsys copyright message.\r\nVCS_VLOG_OPTIONS += -full64 # Analyze the design for 64-bit simulation.\r\nVCS_VLOG_OPTIONS += +v2k\r\n#VCS_VLOG_OPTIONS += -q # Suppresses compiler message.\r\nVCS_VLOG_OPTIONS += -work worklib # Map a design library name to the logical library ame WORK\r\n                                  # which receives the output of vlogan.\r\nVCS_VLOG_OPTIONS +=\t-sverilog # Enable the SystemVerilog source code.\r\nVCS_VLOG_OPTIONS += -timescale=$(TIME_SCALE) # Specifies the timecale.\r\n#VCS_VLOG_OPTIONS += +define+DUMP_FSDB # Define a text macro. Test for this deifinition in your\r\n             \t\t\t\t\t\t  \t\t\t      # Verilog source code using the ifdef compiler directive\r\n#VCS_VLOG_OPTIONS += +libext+.v+.vh.+.vp+.sv # Specifies that VCS MX search only for files with\r\n\t\t\t\t\t\t\t\t\t                          # the specified file name extensions in a library \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t#\tdirectory.`\r\nVCS_VLOG_OPTIONS +=\t-l vlogan_rtl.log # Specifies a log file.\r\nVCS_VLOG_OPTIONS +=\t-f ./filelist/vlog.f # Specifies the VHDL source filelist to be analyzed.\r\nVCS_VLOG_OPTIONS += -kdb\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u4e0a\u8ff0\u4ee3\u7801\u4ec5\u7ed9\u51fa\u90e8\u5206\u5b9e\u4f8b\u53c2\u6570\uff0c\u66f4\u591a\u8be6\u7ec6\u8bbe\u7f6e\u53ef\u901a\u8fc7vlogan\u6216vhdlan -help\u6216\u8005\u67e5\u9605VCS MX\u5b98\u65b9\u6587\u6863"}),"\n",(0,i.jsx)(n.h3,{id:"elaboration",children:"Elaboration"}),"\n",(0,i.jsx)(n.p,{children:"\u8be5\u6b65\u9aa4\u4f7f\u7528analyze\u8fc7\u7a0b\u751f\u6210\u7684\u4e2d\u95f4\u6587\u4ef6\u5efa\u7acb\u6a21\u5757\u5b9e\u4f8b\u5316\u7684\u5c42\u6b21\u7ed3\u6784\u5e76\u751f\u6210\u53ef\u6267\u884c\u7684simv\u6587\u4ef6\u7528\u4e8e\u540e\u7eed\u4eff\u771f\u7684\u8fd0\u884c"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# set the vcs options, the more options can be find in VCS MX/VCS MXi User Guide or vcs -help\r\nVCS_ELAB_OPTIONS  = -full64 # Analyze the design for 64-bit simulation.\r\nVCS_ELAB_OPTIONS += -q # Suppresses compiler message.\r\n#VCS_ELAB_OPTIONS += -R # Run the executable file immediately after VCS MX links it together.\r\nVCS_ELAB_OPTIONS += -l elaborate.log # Specifies a log file.\r\nVCS_ELAB_OPTIONS += -timescale=$(TIME_SCALE)\r\n#VCS_ELAB_OPTIONS += -P $(VERDI_PLI_PATH)/novas.tab $(VERDI_PLI_PATH)/pli.a\r\nVCS_ELAB_OPTIONS += -kdb # Enable generate Verdi KDB database.\r\nVCS_ELAB_OPTIONS += -debug_access+all # Enables post-process debug.  \r\n                                      # Use'-debug_access+classdbg' for testbench debug,\r\n                                      # and '-debug_access+all' for all debug capabilities\r\n                                      # Refer the VCS user '-debug_access' \r\n                                      # and refer to '-debug_region' for region control.\"\r\nVCS_ELAB_OPTIONS += -lca # The kdb option is belong to the lca strategy.\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u4e0a\u8ff0\u4ee3\u7801\u4ec5\u7ed9\u51fa\u90e8\u5206\u5b9e\u4f8b\u53c2\u6570\uff0c\u66f4\u591a\u8be6\u7ec6\u8bbe\u7f6e\u53ef\u901a\u8fc7vlogan\u6216vhdlan -help\u6216\u8005\u67e5\u9605VCS MX\u5b98\u65b9\u6587\u6863"}),"\n",(0,i.jsx)(n.h3,{id:"simulation\u5e76\u4f7f\u7528verdi\u67e5\u770b\u4eff\u771f\u7ed3\u679c",children:"Simulation\u5e76\u4f7f\u7528verdi\u67e5\u770b\u4eff\u771f\u7ed3\u679c"}),"\n",(0,i.jsx)(n.p,{children:"\u8be5\u8fc7\u7a0b\u4f7f\u7528\u4e0a\u4e00\u6b65\u4ea7\u751f\u7684\u53ef\u6267\u884c\u6587\u4ef6\u8fdb\u884c\u4eff\u771f\u7684\u8fd0\u884c\u3002\u5927\u81f4\u53ef\u5206\u4e3a\u4e24\u79cd\u6a21\u5f0f"}),"\n",(0,i.jsx)(n.h4,{id:"1-post-processing-mode",children:"1. post-processing mode"}),"\n",(0,i.jsx)(n.p,{children:"\u8be5\u6a21\u5f0f\u9700\u8981\u9996\u5148\u751f\u6210Verdi\u6240\u9700\u7684fsdb\u6587\u4ef6\uff0c\u751f\u6210fsdb\u53ef\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"\u4f7f\u7528Verilog\u7cfb\u7edf\u51fd\u6570"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'initial begin\r\n    $fsdbDumpfile("top_tb.fsdb");\r\n    $fsdbDumpvars(0,"tob_tb");\r\nend\n'})}),"\n",(0,i.jsx)(n.p,{children:"VCS\u4e2d\u4e0d\u5305\u542bfsdbDump\u76f8\u5173\u51fd\u6570\uff0c\u82e5\u4eff\u771f\u8fc7\u7a0b\u4e2d\u63d0\u793a\u627e\u4e0d\u5230\u51fd\u6570\u6216task\u53ef\u901a\u8fc7-P\u53c2\u6570\u589e\u52a0Verdi\u52a8\u6001\u94fe\u63a5\u5e93\u6216\u589e\u52a0-debug_acc+all\u53c2\u6570\r\n2. \u4f7f\u7528UCLI/TCL\u547d\u4ee4"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'global env\r\nfsdbDumpfile "$env(demo_fifo).fsdb"\r\nfsdbDumpvars 0 "top_tb"\r\nrun 100us\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u82e5\u4f7f\u7528tcl\u547d\u4ee4\u5bf9\u4eff\u771f\u8fc7\u7a0b\u8fdb\u884c\u63a7\u5236\uff0c\u9700\u8981\u5728\u8fd0\u884csimv\u6587\u4ef6\u65f6\u589e\u52a0-i\u53c2\u6570\u5e76\u6307\u5b9a\u5bf9\u5e94\u7684tcl\u6587\u4ef6\u3002\r\n\u4f7f\u7528tcl\u63a7\u5236\u4eff\u771f\u8fc7\u7a0b\u4e0d\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u4eff\u771f\u9876\u5c42\uff0c\u662f\u7528\u9ad8\u7ea7\u8bed\u8a00\u63a5\u53e3\u5bb9\u6613\u5b8c\u6210\u590d\u6742\u5904\u7406\uff0c\u5982\u53d8\u91cf\u7684\u4f20\u9012\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7b49\uff0c\u5e76\u4f7f\u7528\u4ea4\u4e92\u5f0f\u63a5\u53e3\uff0c\u63a7\u5236\u7075\u6d3b\uff0c\u53ef\u5728\u4eff\u771f\u8fc7\u7a0b\u4e2d\u4fee\u6539dump\u4fe1\u606f\uff0c\u5982dumpoff/on\u7b49"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# set the simulation options, the more options can be find in VCS MX/VCS MXi User Guide or vlogan -help\r\nVCS_SIM_OPTISONS  = -l run.log # Specifies the simulation log file\r\nVCS_SIM_OPTISONS += -ucli # Use the Unified Command-line Interface(UCLI)\r\nVCS_SIM_OPTISONS += -i run.tcl # specifies the run.tcl\r\nVCS_SIM_OPTISONS += +fsdb+autoflush # Enable the dumping while simulation.\r\n\r\n./simv $(VCS_SIM_OPTISONS);\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u5728\u8fd0\u884c\u4eff\u771f\u4e4b\u540e\uff0c\u4fbf\u53ef\u4f7f\u7528verdi \u901a\u8fc7-ssf\u53c2\u6570\u52a0\u8f7dfsdb\u6587\u4ef6\u67e5\u770b\u4eff\u771f\u7ed3\u679c"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"verdi:\r\n\t@if [ -f $(MODULE_TOP).rc ]; then \\\r\n\t\tverdi $(VERDI_OPTISONS) -ssf $(MODULE_TOP).fsdb -sswr $(MODULE_TOP).rc; \\\r\n\telse \\\r\n\t\tverdi $(VERDI_OPTISONS) -ssf $(MODULE_TOP).fsdb; \\\r\n\tfi\n"})}),"\n",(0,i.jsx)(n.h4,{id:"2-ufe-flow\u63a8\u8350",children:"2. UFE flow(\u63a8\u8350)"}),"\n",(0,i.jsx)(n.p,{children:"\u8be5\u6a21\u5f0f\u53ef\u4ee5\u7b80\u5316Verdi\u5bfc\u5165\u7684\u6d41\u7a0b\r\n\u8be5\u6a21\u5f0f\u4e0d\u9700\u8981\u63d0\u524d\u751f\u6210fsdb\u6587\u4ef6\u518d\u901a\u8fc7verdi\u5bfc\u5165\uff0c\u53ef\u901a\u8fc7\u5728analyze\u548celaborate\u9636\u6bb5\u589e\u52a0-kdb -lca\u53c2\u6570\u6765\u751f\u6210Verdi\u7684KDB database\uff0c\u4ece\u800c\u76f4\u63a5\u4f7f\u7528Verdi\u542f\u52a8\u4eff\u771f\u5e76\u8c03\u7528tcl\u811a\u672c"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"./simv $(VCS_SIM_OPTISONS) -verdi;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"verdi\u7684\u4f7f\u7528",children:"Verdi\u7684\u4f7f\u7528"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"nTrace"}),"\n",(0,i.jsx)(n.li,{children:"nWave"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u53c2\u8003\u6587\u732e",children:"\u53c2\u8003\u6587\u732e"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"VCS MX/VCS MXi User Guide"}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.youtube.com/watch?v=SGiSNNCVk4Y",children:"https://www.youtube.com/watch?v=SGiSNNCVk4Y"})}),"\n",(0,i.jsxs)(n.li,{children:["Verdi\u57fa\u7840\u77e5\u8bc6\u6574\u7406 ",(0,i.jsx)(n.a,{href:"https://blog.csdn.net/immeatea_aun/article/details/80961258",children:"https://blog.csdn.net/immeatea_aun/article/details/80961258"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://b23.tv/pEvsLe",children:"https://b23.tv/pEvsLe"})}),"\n",(0,i.jsx)(n.li,{children:"solvnet.synopsys.com"}),"\n",(0,i.jsxs)(n.li,{children:["VCS\u5b66\u4e60\u603b\u7ed3_201212060 ",(0,i.jsx)(n.a,{href:"https://wenku.baidu.com/view/a514c0ef9ec3d5bbfd0a743f.html?pn=50",children:"https://wenku.baidu.com/view/a514c0ef9ec3d5bbfd0a743f.html?pn=50"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u9644\u5f55",children:"\u9644\u5f55"}),"\n",(0,i.jsx)(n.p,{children:"Makefile"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'#============================================================\r\n#  Company: \r\n#\r\n#  Author: \r\n#\r\n#  Description:\r\n#\r\n#    This makefile is used to simulate your design and view \r\n#    the wave file by vcs+verdi. The simulation process \r\n#    includes the following four steps:\r\n#    Analysis(vlogan/vhdlan) -> Elaboration(vcs) -> simulation -> verdi\r\n#\r\n#  Tool version: vcs L-2016.06 verdi_2017.12_sp2\r\n#\r\n#  Version: 1.0 - file created\r\n#\r\n#  Data: 2020.06.17\r\n#\r\n#============================================================\r\nTIME_SCALE = 1ns/1ps\r\nTEST_NAME = tb # the top module name of design\r\nVLOG_LIST = 1 # if there is a vlog_list\r\nVHDL_LIST = 0 # if there is a vhdl_list\r\nINIT_STD_LOGIC = 0 # initialize the VHDL STD_LOGIC/STD_ULOGIC\r\nVERDI_INVOKED_MODE = 1 # 0-Post-processing mode, 1-interactive mode\r\n# Specifies the VERDI \r\nVERDI_PLI_PATH = /share/eda/Synopsys/verdi/verdi_2016.06/share/PLI/VCS/LINUX64\r\nMODULE_TOP = $(TB)# TB is form the terminal input\r\n\r\n#--------------------------------------------------------------------------------\r\n# set the vhdlan options, the more options can be find in VCS MX/VCS MXi User Guide or vhdlan -help\r\nVCS_VHDL_OPTIONS  = -nc # Suppresses the Synopsys copyright message.\r\nVCS_VHDL_OPTIONS += -full64 # Analyze the design for 64-bit simulation.\r\nVCS_VHDL_OPTIONS +=\t-work worklib # Map a design library name to the logical library ame WORK\r\n                                  # which receives the output of vhdlan.\r\nVCS_VHDL_OPTIONS +=\t-l vhdlan_rtl.log # Specifies a log file.\r\nVCS_VHDL_OPTIONS +=\t-f ./filelist/vhdl.f # Specifies the VHDL source filelist to be analyzed.\r\nVCS_VHDL_OPTIONS +=\t-f ./filelist/tb.f # Specifies the TB source filelist to be analyzed.\r\nVCS_VHDL_OPTIONS += -kdb\r\n\r\n#--------------------------------------------------------------------------------\r\n# set the vlogan options, the more options can be find in VCS MX/VCS MXi User Guide or vlogan -help\r\nVCS_VLOG_OPTIONS = -nc # Suppresses the Synopsys copyright message.\r\nVCS_VLOG_OPTIONS += -full64 # Analyze the design for 64-bit simulation.\r\nVCS_VLOG_OPTIONS += +v2k\r\n#VCS_VLOG_OPTIONS += -q # Suppresses compiler message.\r\nVCS_VLOG_OPTIONS += -work worklib # Map a design library name to the logical library ame WORK\r\n                                  # which receives the output of vlogan.\r\nVCS_VLOG_OPTIONS +=\t-sverilog # Enable the SystemVerilog source code.\r\nVCS_VLOG_OPTIONS += -timescale=$(TIME_SCALE) # Specifies the timecale.\r\n#VCS_VLOG_OPTIONS += +define+DUMP_FSDB # Define a text macro. Test for this deifinition in your\r\n             \t\t\t\t\t\t  \t\t\t      # Verilog source code using the ifdef compiler directive\r\n#VCS_VLOG_OPTIONS += +libext+.v+.vh.+.vp+.sv # Specifies that VCS MX search only for files with\r\n\t\t\t\t\t\t\t\t\t                          # the specified file name extensions in a library \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t#\tdirectory.`\r\nVCS_VLOG_OPTIONS +=\t-l vlogan_rtl.log # Specifies a log file.\r\nVCS_VLOG_OPTIONS +=\t-f ./filelist/vlog.f # Specifies the VHDL source filelist to be analyzed.\r\nVCS_VLOG_OPTIONS += -kdb # Compile design and generate un-resolved KDB to ./work\r\n\r\n#--------------------------------------------------------------------------------\r\n# set the vcs options, the more options can be find in VCS MX/VCS MXi User Guide or vcs -help\r\nVCS_ELAB_OPTIONS  = -full64 # Analyze the design for 64-bit simulation.\r\nVCS_ELAB_OPTIONS += -q # Suppresses compiler message.\r\n#VCS_ELAB_OPTIONS += -R # Run the executable file immediately after VCS MX links it together.\r\nVCS_ELAB_OPTIONS += -l elaborate.log # Specifies a log file.\r\nVCS_ELAB_OPTIONS += -timescale=$(TIME_SCALE)\r\n#VCS_ELAB_OPTIONS += -P $(VERDI_PLI_PATH)/novas.tab $(VERDI_PLI_PATH)/pli.a\r\nVCS_ELAB_OPTIONS += -kdb # Enable generate Verdi KDB database, generate elaborate KDB to ./simv.dadir\r\nVCS_ELAB_OPTIONS += -debug_access+all # Enables post-process debug.  \r\n                                      # Use\'-debug_access+classdbg\' for testbench debug,\r\n                                      # and \'-debug_access+all\' for all debug capabilities\r\n                                      # Refer the VCS user \'-debug_access\' \r\n                                      # and refer to \'-debug_region\' for region control."\r\nVCS_ELAB_OPTIONS += -lca # The kdb option is belong to the lca strategy.\r\n\r\n#--------------------------------------------------------------------------------\r\n# set the simulation options, the more options can be find in VCS MX/VCS MXi User Guide or vlogan -help\r\nVCS_SIM_OPTISONS  = -l run.log # Specifies the simulation log file\r\nVCS_SIM_OPTISONS += -ucli # Use the Unified Command-line Interface(UCLI)\r\nVCS_SIM_OPTISONS += -i run.tcl # specifies the run.tcl\r\nVCS_SIM_OPTISONS += +fsdb+autoflush # Enable the dumping while simulation.\r\n\r\n#--------------------------------------------------------------------------------\r\n# set the verdi options, the more options can be find in verdi User Guide or verdi -help\r\nVERDI_OPTISONS   = -sv # Support the SystemVerilog\r\nVERDI_OPTISONS  += -f ./filelist/vlog.f\r\nVERDI_OPTISONS  += -f ./filelist/vhdl.f\r\nVERDI_OPTISONS  += -top $(MODULE_TOP) \r\n\r\nall: config analyze elaborate sim\r\n\r\n#----------------------------------------------------------------------\r\n#  help\r\n#----------------------------------------------------------------------\r\nhelp:\r\n\t@echo "############################################################################################";\r\n\t@echo "# Makefile Help Page:"\r\n\t@echo "#    Testcase:"\r\n\t@echo "#           TB=test_name:    specify testcase name"\r\n\t@echo "#           TB=tb_sensor_driver_top"\r\n\t@echo "#           TB=tb_fan_pwm_ctrl"\r\n\t@echo "#    Targets:"\r\n\t@echo "#           clean:       clean simulation directory"\r\n\t@echo "#           verdi:       show simulation wave in verdi"\r\n\t@echo "############################################################################################";\r\n\r\n#----------------------------------------------------------------------\r\n#  Config\r\n#----------------------------------------------------------------------\r\nconfig:\r\n\t@echo \'=============== Config work library ================\'\r\n\t@mkdir -p worklib\r\n\t@echo "WORK > worklib"                     > synopsys_sim.setup\r\n\t@echo "worklib : ./worklib"               >> synopsys_sim.setup\r\n\t@if [ $(VHDL_LIST) == 1 ]; then \\\r\n\t  echo "INIT_STD_LOGIC=$(INIT_STD_LOGIC)" >> synopsys_sim.setup; \\\r\n\tfi\r\n\r\n#----------------------------------------------------------------------\r\n#  Analyze\r\n#----------------------------------------------------------------------\r\nanalyze: \r\n\t@echo \'================ Analysis disegn ===================\'\r\n\t@if [ $(VHDL_LIST) == 1 ]; then \\\r\n\t\tvhdlan $(VCS_VHDL_OPTIONS); \\\r\n\tfi\r\n\t@if [ $(VLOG_LIST) == 1 ]; then \\\r\n\t\tvlogan $(VCS_VLOG_OPTIONS); \\\r\n\tfi\r\n\r\n#----------------------------------------------------------------------\r\n#  Elaboration\r\n#  VCS MX using the intermediate files generated during analysis builds \r\n#  the instance hierarchy and generates a binary executable simv \r\n#----------------------------------------------------------------------\r\nelaborate:\r\n\t@echo \'================ Elaborate design ==================\'\r\n\t@vcs $(VCS_ELAB_OPTIONS) worklib.$(MODULE_TOP) \r\n\r\n#------------------------------------------------------------\r\n#  Simulate\r\n#------------------------------------------------------------\r\nsim: simulate\r\nsimulate:\r\n\t@echo \'================= Simulate design ==================\'\r\n\t@if [ $(VERDI_INVOKED_MODE) == 0 ]; then \\\r\n\t\t./simv $(VCS_SIM_OPTISONS); \\\r\n\telse \\\r\n\t\t./simv $(VCS_SIM_OPTISONS) -verdi -verdi_opts; \\\r\n\tfi\r\n\r\n#------------------------------------------------------------\r\n#  view the wave\r\n#------------------------------------------------------------\r\nverdi:\r\n\t@if [ -f $(MODULE_TOP).rc ]; then \\\r\n\t\tverdi $(VERDI_OPTISONS) -ssf $(MODULE_TOP).fsdb -sswr $(MODULE_TOP).rc; \\\r\n\telse \\\r\n\t\tverdi $(VERDI_OPTISONS) -ssf $(MODULE_TOP).fsdb; \\\r\n\tfi\r\n\r\n#------------------------------------------------------------\r\n#  clean\r\n#------------------------------------------------------------\r\nclean:\r\n\t@echo \'================== Clean output ====================\'\r\n\t@rm -f simv\r\n\t@rm -f ucli.key\r\n\t@rm -f novas.conf\r\n\t@rm -f novas.rc\r\n\t@rm -f synopsys_sim.setup\r\n\t@rm -f *.log\r\n\t@rm -f *.fsdb\r\n\t@rm -fr worklib\r\n\t@rm -fr verdiLog\r\n\t@rm -fr simv.daidir\r\n\t@rm -fr csrc\r\n        @rm -rf *.fsdb*\r\n        @rm -rf *.ses*\r\n\n'})}),"\n",(0,i.jsx)(n.p,{children:"run.sh"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'#!/bin/bash\r\n#-*- coding: utf-8 -*-\r\nif [ ! $1 ]; then\r\n  export TB="default_top_name"\r\nelse\r\n  export TB=$1\r\nfi\r\n# export\u8bbe\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u662f\u4e34\u65f6\u7684\uff0c\u518d\u5173\u95edshell\u65f6\u5931\u6548\uff08\u6709\u7684\u7cfb\u7edf\u76f4\u5230log out\u624d\u5931\u6548\uff09\uff0c$1\u4e3a\u4f20\u5165\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c$0\u8fd4\u56de\u547d\u4ee4\r\necho "The top module is $TB"\r\n# make clean\r\nmake TB=$TB VERDI_INVOKED_MODE=1\n'})}),"\n",(0,i.jsx)(n.p,{children:"run.tcl"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'fsdbDumpfile "$env(TB).fsdb"  # \u901a\u8fc7shell\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u4f20\u9012\u53c2\u6570\r\nfsdbDumpvars 0 "$env(TB)"\r\nrun 100us\r\n# if there is signal.rc existed, restore the rc file\r\nif { [file exists $env(TB).rc] == 1 } {\r\n  wvRestoreSignal "$env(TB).rc"\r\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u4e0a\u9762wvRestoreSignal\u4e3averdi\u7684\u547d\u4ee4\uff0cverdi\u517c\u5bb9tcl\u547d\u4ee4\uff0c\u8be6\u7ec6\u5173\u7cfb\u548c\u547d\u4ee4\u683c\u5f0f\u53ef\u67e5\u770bverdi \u754c\u9762help\u5e2e\u52a9\u9875\u4e2d\u7684Verdi and Siloti Tcl Reference\u6587\u6863"})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>o});var i=r(96540);const t={},s=i.createContext(t);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);