"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8195],{13709:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>_,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var t=n(74848),s=n(28453);const o={},i=void 0,a={id:"\u968f\u7b14/img_scoreboard-sv",title:"img_scoreboard-sv",description:"",source:"@site/docs/\u968f\u7b14/img_scoreboard-sv.md",sourceDirName:"\u968f\u7b14",slug:"/\u968f\u7b14/img_scoreboard-sv",permalink:"/docs/\u968f\u7b14/img_scoreboard-sv",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u968f\u7b14/img_scoreboard-sv.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"img_pkg-sv",permalink:"/docs/\u968f\u7b14/img_pkg-sv"},next:{title:"img_sequencer-sv",permalink:"/docs/\u968f\u7b14/img_sequencer-sv"}},c={},p=[];function u(e){const r={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'`ifndef IMG_SCOREBOARD__SV\r\n`define IMG_SCOREBOARD__SV\r\n\r\nclass img_scoreboard extends uvm_scoreboard;\r\n    img_transaction expect_queue[$];\r\n    uvm_blocking_get_port#(img_transaction) exp_port;\r\n    uvm_blocking_get_port#(img_transaction) act_port;\r\n\r\n    function new(string name, uvm_component parent);\r\n        super.new(name, parent);\r\n    endfunction : new\r\n\r\n    extern function void build_phase(uvm_phase phase);\r\n    extern virtual task main_phase(uvm_phase phase);\r\n\r\n    `uvm_component_utils(img_scoreboard)\r\nendclass : img_scoreboard\r\n\r\nfunction void img_scoreboard::build_phase(uvm_phase phase);\r\n    super.build_phase(phase);\r\n    exp_port = new("exp_port", this);\r\n    act_port = new("act_port", this);\r\nendfunction : build_phase\r\n\r\ntask img_scoreboard::main_phase(uvm_phase phase);\r\n    img_transaction get_expect, get_acture, tmp_tr;\r\n    bit result;\r\n    fork\r\n        while(1) begin\r\n            exp_port.get(get_expect);\r\n            expect_queue.push_back(get_expect);\r\n        end\r\n        while(1) begin\r\n            act_port.get(get_acture);\r\n            if(expect_queue.size() > 0) begin\r\n                tmp_tr = expect_queue.pop_front();\r\n                result = get_acture.compare(tmp_tr);\r\n                if(result) begin\r\n                    `uvm_info("img_scoreboard", "Compare SUCCESSFULL", UVM_LOW);\r\n                end\r\n                else begin\r\n                    `uvm_error("img_scoreboard", "Compare FAILED");\r\n                    $display("the expect transaction is:");\r\n                    tmp_tr.print();\r\n                    $display("the acture transaction is:");\r\n                    tmp_tr.print();\r\n                end\r\n            end\r\n            else begin\r\n                `uvm_error("img_scoreboard", "Receiver form DUT, while Expect Queue is empty");\r\n                $display("the unexpected pkt is:");\r\n                get_acture.print();\r\n            end\r\n        end\r\n    join\r\nendtask : main_phase\r\n\r\n`endif\n'})})}function _(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>a});var t=n(96540);const s={},o=t.createContext(s);function i(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);